import 'dart:io';
import 'package:auto_size_text/auto_size_text.dart';
import 'package:dropdown_button2/custom_dropdown_button2.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:jss_flutter/Presenter/submitFormWithFilesPresenter.dart';
import 'package:jss_flutter/constants/UrlEndPoints.dart';
import 'package:jss_flutter/constants/constants.dart';
import 'package:jss_flutter/models/Request/RequestSubmitFormWithFiles.dart';
import 'package:jss_flutter/models/Request/RequestUploadFile.dart';
import 'package:jss_flutter/models/Response/ResponseFileUpload.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../constants/strings.dart';
import '../utility/Util.dart';

class Infra extends StatefulWidget {
   Infra(this.context,this.darpanId,{Key? key}) : super(key: key);
  BuildContext context;
  String darpanId;
  @override
  State<Infra> createState() => _InfraState();
}

class _InfraState extends State<Infra> implements ResponseSubmitFormsWithFilesPresenter {

  late PresenterSubmitFormWithFiles presenterSubmitFormWithFiles;
  List<String> selectFacility=["Yes","No"];
  int indexFacility=-1;
  String? facilit;
  List<dynamic> photopathsOfficeSpace=[];
  List<dynamic> photopathsBasicFacility=[];
  List<dynamic> photopathsTools=[];
  File? filepath;
  File? filepathOfficeAgreement;
  String? filename;
  String? filenameOfficeAgreement;
  bool containervisible=false;
  final controller = ScrollController();
  List<UploadedFiles> uploadedFile=[];
 String example='{"param11":78,"param15":"DF/8888/1234567","param13":"BASE","fileUpload": {"moduleType": "project_other","sectionType": "othrproj_evidence","contentType": "File","filename": "NewDoc.doc","file": [-48,-49,17,-32,-95,-79,26,-31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,3,0,-2,-1,9,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,16,0,0,2,0,0,0,1,0,0,0,-2,-1,-1,-1,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-3,-1,-1,-1,5,0,0,0,-2,-1,-1,-1,4,0,0,0,6,0,0,0,-2,-1,-1,-1,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,82,0,111,0,111,0,116,0,32,0,69,0,110,0,116,0,114,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,5,0,-1,-1,-1,-1,-1,-1,-1,-1,1,0,0,0,6,9,2,0,0,0,0,0,-64,0,0,0,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,64,12,-40,28,-62,3,-39,1,3,0,0,0,-128,26,0,0,0,0,0,0,5,0,83,0,117,0,109,0,109,0,97,0,114,0,121,0,73,0,110,0,102,0,111,0,114,0,109,0,97,0,116,0,105,0,111,0,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,2,1,4,0,0,0,2,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,1,0,0,0,0,0,0,5,0,68,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,83,0,117,0,109,0,109,0,97,0,114,0,121,0,73,0,110,0,102,0,111,0,114,0,109,0,97,0,116,0,105,0,111,0,110,0,0,0,0,0,0,0,0,0,0,0,56,0,2,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,-16,1,0,0,0,0,0,0,87,0,111,0,114,0,100,0,68,0,111,0,99,0,117,0,109,0,101,0,110,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,51,14,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,-2,-1,-1,-1,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,-2,-1,-1,-1,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,-2,-1,-1,-1,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,0,0,10,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,-32,-123,-97,-14,-7,79,104,16,-85,-111,8,0,43,39,-77,-39,48,0,0,0,-64,1,0,0,17,0,0,0,1,0,0,0,-96,0,0,0,0,0,0,-128,-88,0,0,0,2,0,0,0,-80,0,0,0,3,0,0,0,-52,0,0,0,4,0,0,0,-40,0,0,0,5,0,0,0,-24,0,0,0,6,0,0,0,-12,0,0,0,7,0,0,0,0,1,0,0,8,0,0,0,32,1,0,0,9,0,0,0,72,1,0,0,12,0,0,0,84,1,0,0,13,0,0,0,96,1,0,0,14,0,0,0,108,1,0,0,15,0,0,0,116,1,0,0,16,0,0,0,124,1,0,0,18,0,0,0,-124,1,0,0,19,0,0,0,-72,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,-80,4,0,0,19,0,0,0,9,4,0,0,31,0,0,0,9,0,0,0,84,0,101,0,115,0,116,0,32,0,100,0,111,0,99,0,0,0,0,0,31,0,0,0,1,0,0,0,0,0,0,0,31,0,0,0,4,0,0,0,49,103,-96,113,55,-107,0,0,31,0,0,0,1,0,0,0,0,0,0,0,31,0,0,0,1,0,0,0,0,0,0,0,31,0,0,0,11,0,0,0,78,0,111,0,114,0,109,0,97,0,108,0,46,0,119,0,112,0,116,0,0,0,0,0,31,0,0,0,15,0,0,0,65,0,115,0,104,0,105,0,115,0,104,0,32,0,83,0,105,0,110,0,103,0,104,0,97,0,108,0,0,0,0,0,31,0,0,0,2,0,0,0,49,0,0,0,64,0,0,0,0,44,119,-3,0,105,-58,1,64,0,0,0,0,87,115,28,-62,3,-39,1,3,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,31,0,0,0,22,0,0,0,77,0,105,0,99,0,114,0,111,0,115,0,111,0,102,0,116,0,32,0,79,0,102,0,102,0,105,0,99,0,101,0,32,0,87,0,111,0,114,0,100,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-1,0,0,10,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,-43,-51,-43,-100,46,27,16,-109,-105,8,0,43,44,-7,-82,68,0,0,0,5,-43,-51,-43,-100,46,27,16,-109,-105,8,0,43,44,-7,-82,92,1,0,0,24,1,0,0,16,0,0,0,1,0,0,0,-120,0,0,0,0,0,0,-128,-112,0,0,0,15,0,0,0,-104,0,0,0,2,0,0,0,-92,0,0,0,14,0,0,0,-80,0,0,0,6,0,0,0,-68,0,0,0,5,0,0,0,-60,0,0,0,17,0,0,0,-52,0,0,0,3,0,0,0,-44,0,0,0,4,0,0,0,-32,0,0,0,7,0,0,0,-24,0,0,0,8,0,0,0,-16,0,0,0,9,0,0,0,-8,0,0,0,10,0,0,0,0,1,0,0,11,0,0,0,8,1,0,0,16,0,0,0,16,1,0,0,2,0,0,0,-80,4,0,0,19,0,0,0,9,4,0,0,31,0,0,0,1,0,0,0,0,0,0,0,31,0,0,0,1,0,0,0,0,0,0,0,31,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,31,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,-108,0,0,0,4,0,0,0,0,0,0,0,40,0,0,0,1,0,0,0,92,0,0,0,0,0,0,-128,100,0,0,0,2,0,0,0,108,0,0,0,1,0,0,0,2,0,0,0,19,0,0,0,75,0,83,0,79,0,80,0,114,0,111,0,100,0,117,0,99,0,116,0,66,0,117,0,105,0,108,0,100,0,86,0,101,0,114,0,0,0,0,0,2,0,0,0,-80,4,0,0,19,0,0,0,9,4,0,0,31,0,0,0,16,0,0,0,49,0,48,0,51,0,51,0,45,0,57,0,46,0,49,0,46,0,48,0,46,0,52,0,54,0,55,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,84,0,97,0,98,0,108,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,2,1,5,0,0,0,3,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,0,0,52,8,0,0,0,0,0,0,68,0,97,0,116,0,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-20,-91,-63,0,-119,-120,9,4,0,0,20,80,-65,0,0,0,0,0,0,16,0,0,0,0,0,8,0,0,18,8,0,0,14,0,75,83,75,83,-61,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,22,0,51,14,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,15,0,0,0,0,0,0,0,0,0,-1,-1,15,0,0,0,0,0,0,0,0,0,-1,-1,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-92,0,0,0,0,0,56,3,0,0,0,0,0,0,56,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,7,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,3,0,0,12,0,0,0,68,3,0,0,12,0,0,0,0,0,0,0,0,0,0,0,101,3,0,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,8,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,7,0,0,36,0,0,0,-69,4,0,0,104,2,0,0,95,4,0,0,92,0,0,0,80,3,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,7,0,0,-41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,0,101,0,115,0,116,0,32,0,100,0,111,0,99,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,16,8,0,0,18,8,0,0,-7,-13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,111,40,0,109,72,9,4,115,72,9,4,11,111,40,0,109,72,9,4,115,72,9,4,0,2,0,8,0,0,18,8,0,0,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,49,0,31,-80,-126,46,32,-80,-58,65,33,-80,8,7,35,-112,-96,5,34,-80,8,7,36,-112,-96,5,37,-80,0,0,23,-80,-48,2,24,-80,-48,2,50,80,2,0,49,-112,56,1,-1,-47,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-122,2,15,0,18,0,1,0,-100,0,15,0,4,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,54,6,0,0,54,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,6,0,0,2,0,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,54,6,0,0,2,0,0,0,54,6,0,0,54,6,0,0,78,0,0,64,-15,-1,2,0,78,0,0,0,0,0,0,0,0,0,0,0,6,0,78,0,111,0,114,0,109,0,97,0,108,0,0,0,11,0,0,0,97,36,3,3,36,3,49,36,0,0,28,0,67,74,21,0,80,74,2,0,75,72,2,0,109,72,9,4,115,72,9,4,110,72,4,8,116,72,4,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,0,65,64,-14,-1,-95,0,68,0,0,0,0,0,0,0,0,0,0,0,22,0,68,0,101,0,102,0,97,0,117,0,108,0,116,0,32,0,80,0,97,0,114,0,97,0,103,0,114,0,97,0,112,0,104,0,32,0,70,0,111,0,110,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,18,8,0,0,5,0,0,0,0,8,0,0,18,8,0,0,6,0,0,0,2,16,0,0,0,0,0,0,0,9,0,0,0,0,0,0,8,0,0,0,0,4,0,0,0,71,22,-112,1,0,0,2,2,6,3,5,4,5,2,3,4,-121,122,0,32,0,0,0,-128,8,0,0,0,0,0,0,0,-1,1,0,0,0,0,0,0,84,0,105,0,109,0,101,0,115,0,32,0,78,0,101,0,119,0,32,0,82,0,111,0,109,0,97,0,110,0,0,0,59,6,-112,1,-122,3,2,1,6,0,3,1,1,1,1,1,3,0,0,0,0,0,14,8,16,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,-117,91,83,79,0,0,83,0,105,0,109,0,83,0,117,0,110,0,0,0,53,4,-112,1,-122,0,2,1,6,0,3,1,1,1,1,1,3,2,0,0,0,0,-113,40,6,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,83,0,105,0,109,0,83,0,117,0,110,0,0,0,59,4,-112,1,2,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-128,0,0,0,0,87,0,105,0,110,0,103,0,100,0,105,0,110,0,103,0,115,0,0,0,-1,-1,18,0,0,0,0,0,0,0,8,0,84,0,101,0,115,0,116,0,32,0,100,0,111,0,99,0,0,0,0,0,0,0,3,0,49,103,-96,113,55,-107,14,0,65,0,115,0,104,0,105,0,115,0,104,0,32,0,83,0,105,0,110,0,103,0,104,0,97,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,4,0,1,8,-120,24,0,0,-92,1,-23,-3,104,1,0,0,0,0,44,-45,-92,102,43,-21,-85,71,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,4,0,3,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,33,3,0,0,0,0,0,0,3,0,90,0,38,0,33,0,41,0,44,0,46,0,58,0,59,0,63,0,93,0,125,0,-88,0,-73,0,-57,2,-55,2,21,32,22,32,25,32,29,32,38,32,54,34,1,48,2,48,3,48,5,48,9,48,11,48,13,48,15,48,17,48,21,48,23,48,1,-1,2,-1,7,-1,9,-1,12,-1,14,-1,26,-1,27,-1,31,-1,61,-1,64,-1,92,-1,93,-1,94,-1,-32,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,91,0,123,0,-73,0,24,32,28,32,8,48,10,48,12,48,14,48,16,48,20,48,22,48,8,-1,14,-1,59,-1,91,-1,-31,-1,-27,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,-96,5,0,0,-100,0,2,-128,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,-16,-1,15,1,0,1,63,0,0,-88,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,42,23,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-128,1,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,1,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,14,0,0,0,0,-1,-1,-1,-1,15,0,0,-16,70,0,0,0,0,0,6,-16,24,0,0,0,2,8,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,83,0,11,-16,30,0,0,0,-128,1,4,0,0,0,-127,1,-100,-66,-32,0,-125,1,-69,-43,-16,0,-64,1,115,-100,-61,0,-53,1,3,62,0,0,0,15,0,2,-16,-128,0,0,0,16,0,8,-16,8,0,0,0,2,0,0,0,1,4,0,0,15,0,3,-16,48,0,0,0,15,0,4,-16,40,0,0,0,1,0,9,-16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,10,-16,8,0,0,0,0,4,0,0,5,0,0,0,15,0,4,-16,48,0,0,0,18,0,10,-16,8,0,0,0,1,4,0,0,0,14,0,0,67,0,11,-16,24,0,0,0,127,0,0,0,-115,1,127,1,32,0,32,0,-1,1,0,0,8,0,63,3,1,0,1,0,-1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"fileText1": "caption","fileText2": "title"},"transactionId": "1234" ,"source": "aenc"}';
  @override
  void initState()
  {
    photopathsOfficeSpace.add(
        Container(
          margin: const EdgeInsets.symmetric(horizontal: 2,vertical: 1),
          height: MediaQuery.of(widget.context).size.height*0.10,
          width: MediaQuery.of(widget.context).size.height*0.10,
          child: Container(
            color: const Color(0xffa1cbf1).withOpacity(0.4),
            child: Icon(
              Icons.add,
              color: Colors.white,
              size: MediaQuery.of(widget.context).size.height*0.05,
            ),
          ),
        ));
    photopathsBasicFacility.add(
        Container(
          margin: const EdgeInsets.symmetric(horizontal: 2,vertical: 1),
          height: MediaQuery.of(widget.context).size.height*0.10,
          width: MediaQuery.of(widget.context).size.height*0.10,
          child: Container(
            color: const Color(0xffa1cbf1).withOpacity(0.4),
            child: Icon(
              Icons.add,
              color: Colors.white,
              size: MediaQuery.of(widget.context).size.height*0.05,
            ),
          ),
        ));
    photopathsTools.add(
        Container(
          margin: const EdgeInsets.symmetric(horizontal: 2,vertical: 1),
          height: MediaQuery.of(widget.context).size.height*0.10,
          width: MediaQuery.of(widget.context).size.height*0.10,
          child: Container(
            color: const Color(0xffa1cbf1).withOpacity(0.4),
            child: Icon(
              Icons.add,
              color: Colors.white,
              size: MediaQuery.of(widget.context).size.height*0.05,
            ),
          ),
        ));
    presenterSubmitFormWithFiles=PresenterSubmitFormWithFiles(this);
    super.initState();
  }
  scrollToItem(int index)
  {
    final contentSize = controller.position.viewportDimension + controller.position.maxScrollExtent;
    final target = contentSize * index / 3;
    controller.position.animateTo(
      target,
      duration: const Duration(milliseconds: 100),
      curve: Curves.easeInOut,
    );
  }
  Widget build(BuildContext context) {

    return GestureDetector(
      onTap: () {

        FocusManager.instance.primaryFocus?.unfocus();
        setState(() {
          containervisible=false;
        });
      },
      child: Scaffold(
      resizeToAvoidBottomInset: false,
        body: SafeArea(
          child: Stack(
            children: [
              Container(
                height: MediaQuery.of(context).size.height/2,
                width: MediaQuery.of(context).size.width,
                decoration:BoxDecoration(
                    gradient: LinearGradient(
                        begin: Alignment.topCenter,
                        end: Alignment.bottomCenter,
                        colors: <Color>[
                          Color(0xffff8000),
                          Color(0xffFFFFFF)
                        ]
                    )
                ) ,
              ),
              Container(
                height: MediaQuery.of(context).size.height,
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    Container(
                      alignment: Alignment.topLeft,
                      height: MediaQuery.of(context).size.height/6,
                      padding: EdgeInsets.all(MediaQuery.of(context).size.width*0.05),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        mainAxisAlignment: MainAxisAlignment.start,
                        children: [
                          Row(
                            mainAxisSize: MainAxisSize.min,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: [
                              GestureDetector(
                                  onTap: (){
                                    Navigator.pop(context);
                                  },
                                  child: Icon(Icons.arrow_back_ios,color: Colors.white,)),
                              AutoSizeText(
                                "Base Location",
                                textAlign: TextAlign.center,
                                style: GoogleFonts.openSans(
                                    fontWeight: FontWeight.w500,
                                    color: Colors.white,
                                    fontSize: 28
                                ),
                              ),

                            ],
                          ),
                          Padding(
                            padding:  EdgeInsets.only(left:25.0),
                            child: AutoSizeText(
                              "Infrastructure",
                              textAlign: TextAlign.center,
                              style: GoogleFonts.openSans(
                                  fontWeight: FontWeight.w500,
                                  color: Colors.white,
                                  fontSize: 18
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                    Container(
                      height:MediaQuery.of(context).size.height*0.791,
                      width: MediaQuery.of(context).size.width,
                      padding:  EdgeInsets.only(top:MediaQuery.of(context).size.height*0.05,
                        left:MediaQuery.of(context).size.width*0.02,
                        right:MediaQuery.of(context).size.width*0.02,),
                      decoration: const BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.only(topLeft:Radius.circular(50) ,
                              topRight:Radius.circular(50) )
                      ),
                      child: CustomScrollView(
                        controller: controller,
                        slivers: [
                          SliverToBoxAdapter(
                            child: SizedBox(
                              height:MediaQuery.of(context).size.height*0.05,
                              child: AutoSizeText(
                                "Office Space Details",
                                style: GoogleFonts.openSans(
                                  fontSize: 18,
                                  fontWeight: FontWeight.w600
                                ),
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Container(
                              height: MediaQuery.of(context).size.height*0.04,
                              padding: EdgeInsets.symmetric(horizontal: 10),
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  AutoSizeText("Total Office Space",
                                  style: GoogleFonts.openSans(
                                    fontSize: 16
                                  ),
                                  ),
                                  Container(
                                    width: MediaQuery.of(context).size.width*0.30,
                                    child: TextFormField(
                                      keyboardType: TextInputType.number,
                                      cursorColor: Colors.orange,
                                      style: GoogleFonts.openSans(
                                        fontSize: 16
                                      ),

                                      decoration: InputDecoration(
                                        contentPadding: EdgeInsets.symmetric(vertical: 6,horizontal: 4),
                                        border: OutlineInputBorder(
                                            borderRadius: BorderRadius.circular(4.0),
                                            borderSide: BorderSide(
                                              color: Colors.orange,
                                              width: 1,
                                            )
                                        ),
                                        focusedBorder: OutlineInputBorder(
                                            borderRadius: BorderRadius.circular(4.0),
                                            borderSide: BorderSide(
                                              color: Colors.orange,
                                              width: 1,
                                            )
                                      ),
                                       suffixText: "sq. ft."
                                    ),
                                  )
                                  )
                                ],
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Container(
                              width: MediaQuery.of(context).size.width*0.60,
                              child: AutoSizeText("Upload Building Images(1-3)*",
                                style: GoogleFonts.openSans(
                                    fontSize: 16
                                ),
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: SizedBox(
                                width: MediaQuery.of(context).size.width*0.80,
                                height: MediaQuery.of(context).size.height*0.10,
                                child: ListView.builder(
                                    itemCount: photopathsOfficeSpace.length,
                                    scrollDirection: Axis.horizontal,
                                    itemBuilder:(context,index){
                                      if(index==0) {
                                        return  Visibility(visible:photopathsOfficeSpace.length==4?false:true,
                                            child: GestureDetector(
                                              onTap: () async{
                                                Util util=Util();
                                                final image=await util.pickPicture();

                                                if(image!=null)
                                                {
                                                 bool upload= await uploadFile(image,
                                                      "office Space",
                                                      "image${uploadedFile.length+1}",
                                                      "building_image",
                                                  "Image");
                                                 if(upload==true) {
                                                   setState(() {
                                                    photopathsOfficeSpace.add(
                                                        Container(
                                                          margin: const EdgeInsets.symmetric(horizontal: 2,vertical: 1),
                                                          height: MediaQuery.of(context).size.height*0.10,
                                                          width: MediaQuery.of(context).size.height*0.10,
                                                          child: Container(
                                                              color: const Color(0xffa1cbf1).withOpacity(0.4),
                                                              child: Image.file(image,
                                                                height:MediaQuery.of(context).size.height*0.10,
                                                                width:MediaQuery.of(context).size.height*0.10,
                                                                fit: BoxFit.fitWidth,
                                                              )
                                                          ),
                                                        )
                                                    );
                                                  });
                                                 }
                                                }
                                              },
                                              child: photopathsOfficeSpace[0],
                                            ));

                                      } else {
                                        return photopathsOfficeSpace[index];
                                      }
                                    } )
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Container(
                              width: MediaQuery.of(context).size.width,
                              margin: EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  Container(
                                    width: MediaQuery.of(context).size.width*0.60,
                                    child: AutoSizeText("Basic Facility(Drinking Water/Toilet)",
                                      style: GoogleFonts.openSans(
                                          fontSize: 16
                                      ),
                                    ),
                                  ),
                                  CustomDropdownButton2(
                                    hint: 'Select',
                                    dropdownItems: selectFacility,
                                   buttonWidth: MediaQuery.of(context).size.width*0.30,
                                    buttonHeight: MediaQuery.of(context).size.height*0.05,
                                    dropdownWidth:MediaQuery.of(context).size.width*0.30,
                                    buttonDecoration: BoxDecoration(
                                        borderRadius: BorderRadius.circular(10),
                                        color: Colors.transparent,
                                        border: Border.all(color: Color(0xffAFA6A6)
                                        )
                                    ),
                                    value:indexFacility==-1?null: selectFacility[indexFacility],
                                    onChanged: (dynamic value) {
                                      setState(() {
                                        facilit = value;
                                        indexFacility=selectFacility.indexOf(value);
                                      });
                                    },
                                    icon: Icon(Icons.keyboard_arrow_down_outlined),
                                    iconSize: 30,
                                  ),
                                ],
                              )
                            )
                          ),
                          SliverToBoxAdapter(
                            child: Visibility(
                              visible: facilit=="Yes"?true:false,
                              child: Container(
                                width: MediaQuery.of(context).size.width*0.60,
                                child: AutoSizeText("Upload Basic Facilities Images(1-3)*",
                                  style: GoogleFonts.openSans(
                                      fontSize: 16
                                  ),
                                ),
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Visibility(
                              visible: facilit=="Yes"?true:false,
                              child: SizedBox(
                                  width: MediaQuery.of(context).size.width*0.80,
                                  height: MediaQuery.of(context).size.height*0.10,
                                  child: ListView.builder(
                                      itemCount: photopathsBasicFacility.length,
                                      scrollDirection: Axis.horizontal,
                                      itemBuilder:(context,index){
                                        if(index==0) {
                                          return  Visibility(visible:photopathsBasicFacility.length==4?false:true,
                                              child: GestureDetector(
                                                onTap: () async{
                                                  Util util=Util();
                                                  final image=await util.pickPicture();
                                                  if(image!=null)
                                                  {
                                                    bool upload= await uploadFile(image,
                                                        "Basic Facility",
                                                        "image${uploadedFile.length+1}",
                                                        "basic_facility",
                                                        "Image");
                                                    if(upload==true) {
                                                    setState(() {
                                                      photopathsBasicFacility.add(
                                                          Container(
                                                            margin: const EdgeInsets.symmetric(horizontal: 2,vertical: 1),
                                                            height: MediaQuery.of(context).size.height*0.10,
                                                            width: MediaQuery.of(context).size.height*0.10,
                                                            child: Container(
                                                                color: const Color(0xffa1cbf1).withOpacity(0.4),
                                                                child: Image.file(image,
                                                                  height:MediaQuery.of(context).size.height*0.10,
                                                                  width:MediaQuery.of(context).size.height*0.10,
                                                                  fit: BoxFit.fitWidth,
                                                                )
                                                            ),
                                                          )
                                                      );
                                                    });
                                                  }
                                                  }
                                                },
                                                child: photopathsBasicFacility[0],
                                              ));

                                        } else
                                          return photopathsBasicFacility[index];
                                      } )
                              ),
                            ),
                          ),
                          SliverPadding(padding: EdgeInsets.symmetric(vertical: 10)),
                          SliverToBoxAdapter(
                            child: SizedBox(
                              height:MediaQuery.of(context).size.height*0.05,
                              child: AutoSizeText(
                                "Training Centres",
                                style: GoogleFonts.openSans(
                                    fontSize: 18,
                                    fontWeight: FontWeight.w600
                                ),
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Container(
                              height: MediaQuery.of(context).size.height*0.04,
                              padding: EdgeInsets.symmetric(horizontal: 10),
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  AutoSizeText("No of Training Centers",
                                    style: GoogleFonts.openSans(
                                        fontSize: 16
                                    ),
                                  ),
                                  Container(
                                      width: MediaQuery.of(context).size.width*0.30,
                                      child: TextFormField(
                                        keyboardType: TextInputType.number,
                                        cursorColor: Colors.orange,
                                        style: GoogleFonts.openSans(
                                            fontSize: 16,
                                        ),

                                        decoration: InputDecoration(
                                            contentPadding: EdgeInsets.symmetric(vertical: 6,horizontal: 4),
                                            border: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4.0),
                                                borderSide: BorderSide(
                                                  color: Colors.orange,
                                                  width: 1,
                                                )
                                            ),
                                            focusedBorder: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4.0),
                                                borderSide: BorderSide(
                                                  color: Colors.orange,
                                                  width: 1,
                                                )
                                            ),
                                        ),
                                      )
                                  )
                                ],
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Container(
                              height: MediaQuery.of(context).size.height*0.08,
                              padding: EdgeInsets.symmetric(horizontal: 10),
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  Expanded(
                                    child: AutoSizeText("Upload Training Centre Doc",
                                      style: GoogleFonts.openSans(
                                          fontSize: 16
                                      ),
                                    ),
                                  ),
                                  filepath!=null?
                                  GestureDetector(
                                    onTap: () async{
                                      // Util util=Util();
                                      // final file=await util.pickPdfFile();
                                      // if(file!=null) {
                                      //   bool upload=await uploadFile(file,
                                      //     "Training centre doc",
                                      //     "document",
                                      //     "tc_agreement",
                                      //     "File"
                                      //   );
                                      //   if(upload==true)
                                      //   setState((){
                                      //     filepath=file;
                                      //     filename=file!.path.toString().split('/').last;
                                      //   });
                                      // }
                                    },
                                    child: Column(
                                      children: [
                                        Icon(Icons.picture_as_pdf_rounded),
                                        Expanded(
                                          child: AutoSizeText(filename.toString(),
                                            style: GoogleFonts.openSans(
                                                fontSize: 8
                                            ),
                                          ),
                                        )
                                      ],
                                    ),
                                  ):
                                  GestureDetector(
                                      onTap: () async{
                                        Util util=Util();
                                        final file=await util.pickPdfFile();
                                        if(file!=null) {
                                          bool upload=await uploadFile(file,
                                              "Training centre doc",
                                              "document",
                                              "tc_agreement",
                                              "File"
                                          );
                                          if(upload==true)
                                            setState((){
                                              filepath=file;
                                              filename=file!.path.toString().split('/').last;
                                            });
                                        }
                                      },

                                      child: SvgPicture.asset("images/Upload record.svg",height:MediaQuery.of(context).size.height*0.08,fit: BoxFit.fill,))
                                ],
                              ),
                            ),
                          ),
                          SliverPadding(padding: EdgeInsets.symmetric(vertical: 10)),
                          SliverToBoxAdapter(
                            child: SizedBox(
                              height:MediaQuery.of(context).size.height*0.05,
                              child: AutoSizeText(
                                "Tools/Equipments Available for Training",
                                style: GoogleFonts.openSans(
                                    fontSize: 18,
                                    fontWeight: FontWeight.w600
                                ),
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Container(
                              height: MediaQuery.of(context).size.height*0.05,
                              padding: EdgeInsets.symmetric(horizontal: 10),
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  Expanded(
                                    child: AutoSizeText("No of trades for which tool/equipments are available",
                                      style: GoogleFonts.openSans(
                                          fontSize: 16
                                      ),
                                    ),
                                  ),
                                  Container(
                                      width: MediaQuery.of(context).size.width*0.30,
                                      child: TextFormField(
                                        keyboardType: TextInputType.number,
                                        cursorColor: Colors.orange,
                                        style: GoogleFonts.openSans(
                                          fontSize: 16,
                                        ),
                                        onTap: (){
                                          scrollToItem(10);
                                          setState(() {
                                            containervisible=true;
                                          });
                                        },

                                        decoration: InputDecoration(
                                          contentPadding: EdgeInsets.symmetric(vertical: 6,horizontal: 4),
                                          border: OutlineInputBorder(
                                              borderRadius: BorderRadius.circular(4.0),
                                              borderSide: BorderSide(
                                                color: Colors.orange,
                                                width: 1,
                                              )
                                          ),
                                          focusedBorder: OutlineInputBorder(
                                              borderRadius: BorderRadius.circular(4.0),
                                              borderSide: BorderSide(
                                                color: Colors.orange,
                                                width: 1,
                                              )
                                          ),
                                        ),
                                      )
                                  )
                                ],
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: Container(
                              width: MediaQuery.of(context).size.width*0.60,
                              child: AutoSizeText("Upload tools images",
                                style: GoogleFonts.openSans(
                                    fontSize: 16
                                ),
                              ),
                            ),
                          ),
                          SliverToBoxAdapter(
                            child: SizedBox(
                                width: MediaQuery.of(context).size.width*0.80,
                                height: MediaQuery.of(context).size.height*0.10,
                                child: ListView.builder(
                                    itemCount: photopathsTools.length,
                                    scrollDirection: Axis.horizontal,
                                    itemBuilder:(context,index){
                                      if(index==0) {
                                        return  Visibility(visible:photopathsTools.length==4?false:true,
                                            child: GestureDetector(
                                              onTap: () async{
                                                Util util=Util();
                                                final image=await util.pickPicture();
                                                if(image!=null)
                                                {
                                                  bool upload= await uploadFile(image,
                                                    "Tools Images",
                                                    "image${uploadedFile.length+1}",
                                                    "tools",
                                                    "Image");
                                                if(upload==true)
                                                {
                                                  setState(() {
                                                    photopathsTools.add(
                                                        Container(
                                                          margin: const EdgeInsets.symmetric(horizontal: 2,vertical: 1),
                                                          height: MediaQuery.of(context).size.height*0.10,
                                                          width: MediaQuery.of(context).size.height*0.10,
                                                          child: Container(
                                                              color: const Color(0xffa1cbf1).withOpacity(0.4),
                                                              child: Image.file(image,
                                                                height:MediaQuery.of(context).size.height*0.10,
                                                                width:MediaQuery.of(context).size.height*0.10,
                                                                fit: BoxFit.fitWidth,
                                                              )
                                                          ),
                                                        )
                                                    );
                                                  });
                                                }
                                                }
                                              },
                                              child: photopathsTools[0],
                                            ));
                                      } else
                                        return photopathsTools[index];
                                    } )
                            ),
                          ),
                          SliverPadding(padding: EdgeInsets.symmetric(vertical: 10)),
                          SliverToBoxAdapter(
                            child: Container(
                              height: MediaQuery.of(context).size.height*0.08,
                              padding: EdgeInsets.symmetric(horizontal: 10),
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  AutoSizeText("Upload Office Agreement Doc*",
                                    style: GoogleFonts.openSans(
                                        fontSize: 16,
                                      fontWeight: FontWeight.w600
                                    ),
                                  ),
                                  filepathOfficeAgreement!=null?
                                  GestureDetector(
                                    onTap: () async{
                                      // Util util=Util();
                                      // final file=await util.pickPdfFile();
                                      // if(file!=null) {
                                      //   bool upload=await uploadFile(file,
                                      //       "Office Agreement",
                                      //       "document",
                                      //       "office_agreement",
                                      //       "File"
                                      //   );
                                      //   if(upload==true)
                                      //    setState((){
                                      //     filepathOfficeAgreement=file;
                                      //     filenameOfficeAgreement=(file.toString().split('/').last);
                                      //   });
                                      // }
                                    },
                                    child: Column(
                                      children: [
                                        Icon(Icons.picture_as_pdf_rounded),
                                        Expanded(
                                          child: AutoSizeText(filename.toString(),
                                            style: GoogleFonts.openSans(
                                                fontSize: 8
                                            ),
                                          ),
                                        )
                                      ],
                                    ),
                                  ):
                                  GestureDetector(
                                      onTap: () async{
                                        Util util=Util();
                                        final file=await util.pickPdfFile();
                                        if(file!=null) {
                                          bool upload=await uploadFile(file,
                                              "Office Agreement",
                                              "document",
                                              "office_agreement",
                                              "File"
                                          );
                                          if(upload==true)
                                          setState((){
                                            filepathOfficeAgreement=file;
                                            filenameOfficeAgreement=(file.toString().split('/').last);
                                          });
                                        }
                                      },

                                      child: SvgPicture.asset("images/Upload record.svg",height:MediaQuery.of(context).size.height*0.08,fit: BoxFit.fill,))
                                ],
                              ),
                            ),
                          ),
                          SliverPadding(padding: EdgeInsets.symmetric(vertical: 10)),
                          SliverToBoxAdapter(
                            child: GestureDetector(
                              onTap: () {
                              },
                              child: Container(
                                  decoration: BoxDecoration(
                                    color: Colors.orange,
                                    borderRadius:
                                    BorderRadius.circular(40.0),
                                  ),
                                  width: MediaQuery.of(context).size.width,
                                  height: 50,
                                  child:  Center(
                                    child: Text(
                                      "Submit",
                                      style: GoogleFonts.openSans(
                                          fontSize: 18,
                                          fontWeight: FontWeight.w600,
                                          color: Colors.white
                                      ),
                                      textAlign: TextAlign.center,
                                    ),
                                  )),
                            ),
                          ),
                          SliverPadding(padding: EdgeInsets.symmetric(vertical: 10)),
                          SliverToBoxAdapter(
                            child: Visibility(
                              visible:containervisible,
                              child: SizedBox(
                                height: 250,
                              ),
                            ),
                          )
                        ],
                      ),


                    )
                  ],
                ),
              )
            ],
          ),
        ),
      ),
    );
  }

  Future<bool> uploadFile (File? file, String fileText1,String fileText2,String sectionType,String contentType)async
  {
    FocusManager.instance.primaryFocus?.unfocus();
    loader();
  //  List<int> imgbytes = [37,80,68,70,45,49,46,51,10,37,-109,-116,-117,-98,32,82,101,112,111,114,116,76,97,98,32,71,101,110,101,114,97,116,101,100,32,80,68,70,32,100,111,99,117,109,101,110,116,32,104,116,116,112,58,47,47,119,119,119,46,114,101,112,111,114,116,108,97,98,46,99,111,109,10,49,32,48,32,111,98,106,10,60,60,10,47,70,49,32,50,32,48,32,82,32,47,70,50,32,51,32,48,32,82,32,47,70,51,32,52,32,48,32,82,32,47,70,52,32,53,32,48,32,82,32,47,70,53,32,54,32,48,32,82,10,62,62,10,101,110,100,111,98,106,10,50,32,48,32,111,98,106,10,60,60,10,47,66,97,115,101,70,111,110,116,32,47,72,101,108,118,101,116,105,99,97,32,47,69,110,99,111,100,105,110,103,32,47,87,105,110,65,110,115,105,69,110,99,111,100,105,110,103,32,47,78,97,109,101,32,47,70,49,32,47,83,117,98,116,121,112,101,32,47,84,121,112,101,49,32,47,84,121,112,101,32,47,70,111,110,116,10,62,62,10,101,110,100,111,98,106,10,51,32,48,32,111,98,106,10,60,60,10,47,66,97,115,101,70,111,110,116,32,47,72,101,108,118,101,116,105,99,97,45,66,111,108,100,32,47,69,110,99,111,100,105,110,103,32,47,87,105,110,65,110,115,105,69,110,99,111,100,105,110,103,32,47,78,97,109,101,32,47,70,50,32,47,83,117,98,116,121,112,101,32,47,84,121,112,101,49,32,47,84,121,112,101,32,47,70,111,110,116,10,62,62,10,101,110,100,111,98,106,10,52,32,48,32,111,98,106,10,60,60,10,47,66,97,115,101,70,111,110,116,32,47,67,111,117,114,105,101,114,45,66,111,108,100,32,47,69,110,99,111,100,105,110,103,32,47,87,105,110,65,110,115,105,69,110,99,111,100,105,110,103,32,47,78,97,109,101,32,47,70,51,32,47,83,117,98,116,121,112,101,32,47,84,121,112,101,49,32,47,84,121,112,101,32,47,70,111,110,116,10,62,62,10,101,110,100,111,98,106,10,53,32,48,32,111,98,106,10,60,60,10,47,66,97,115,101,70,111,110,116,32,47,84,105,109,101,115,45,66,111,108,100,32,47,69,110,99,111,100,105,110,103,32,47,87,105,110,65,110,115,105,69,110,99,111,100,105,110,103,32,47,78,97,109,101,32,47,70,52,32,47,83,117,98,116,121,112,101,32,47,84,121,112,101,49,32,47,84,121,112,101,32,47,70,111,110,116,10,62,62,10,101,110,100,111,98,106,10,54,32,48,32,111,98,106,10,60,60,10,47,66,97,115,101,70,111,110,116,32,47,84,105,109,101,115,45,82,111,109,97,110,32,47,69,110,99,111,100,105,110,103,32,47,87,105,110,65,110,115,105,69,110,99,111,100,105,110,103,32,47,78,97,109,101,32,47,70,53,32,47,83,117,98,116,121,112,101,32,47,84,121,112,101,49,32,47,84,121,112,101,32,47,70,111,110,116,10,62,62,10,101,110,100,111,98,106,10,55,32,48,32,111,98,106,10,60,60,10,47,67,111,110,116,101,110,116,115,32,49,49,32,48,32,82,32,47,77,101,100,105,97,66,111,120,32,91,32,48,32,48,32,52,48,48,32,51,48,48,32,93,32,47,80,97,114,101,110,116,32,49,48,32,48,32,82,32,47,82,101,115,111,117,114,99,101,115,32,60,60,10,47,70,111,110,116,32,49,32,48,32,82,32,47,80,114,111,99,83,101,116,32,91,32,47,80,68,70,32,47,84,101,120,116,32,47,73,109,97,103,101,66,32,47,73,109,97,103,101,67,32,47,73,109,97,103,101,73,32,93,10,62,62,32,47,82,111,116,97,116,101,32,48,32,47,84,114,97,110,115,32,60,60,10,10,62,62,32,10,32,32,47,84,121,112,101,32,47,80,97,103,101,10,62,62,10,101,110,100,111,98,106,10,56,32,48,32,111,98,106,10,60,60,10,47,80,97,103,101,77,111,100,101,32,47,85,115,101,78,111,110,101,32,47,80,97,103,101,115,32,49,48,32,48,32,82,32,47,84,121,112,101,32,47,67,97,116,97,108,111,103,10,62,62,10,101,110,100,111,98,106,10,57,32,48,32,111,98,106,10,60,60,10,47,65,117,116,104,111,114,32,40,97,110,111,110,121,109,111,117,115,41,32,47,67,114,101,97,116,105,111,110,68,97,116,101,32,40,68,58,50,48,50,50,49,49,49,51,48,55,52,53,49,52,43,48,48,39,48,48,39,41,32,47,67,114,101,97,116,111,114,32,40,82,101,112,111,114,116,76,97,98,32,80,68,70,32,76,105,98,114,97,114,121,32,45,32,119,119,119,46,114,101,112,111,114,116,108,97,98,46,99,111,109,41,32,47,75,101,121,119,111,114,100,115,32,40,41,32,47,77,111,100,68,97,116,101,32,40,68,58,50,48,50,50,49,49,49,51,48,55,52,53,49,52,43,48,48,39,48,48,39,41,32,47,80,114,111,100,117,99,101,114,32,40,82,101,112,111,114,116,76,97,98,32,80,68,70,32,76,105,98,114,97,114,121,32,45,32,119,119,119,46,114,101,112,111,114,116,108,97,98,46,99,111,109,41,32,10,32,32,47,83,117,98,106,101,99,116,32,40,117,110,115,112,101,99,105,102,105,101,100,41,32,47,84,105,116,108,101,32,40,117,110,116,105,116,108,101,100,41,32,47,84,114,97,112,112,101,100,32,47,70,97,108,115,101,10,62,62,10,101,110,100,111,98,106,10,49,48,32,48,32,111,98,106,10,60,60,10,47,67,111,117,110,116,32,49,32,47,75,105,100,115,32,91,32,55,32,48,32,82,32,93,32,47,84,121,112,101,32,47,80,97,103,101,115,10,62,62,10,101,110,100,111,98,106,10,49,49,32,48,32,111,98,106,10,60,60,10,47,70,105,108,116,101,114,32,91,32,47,65,83,67,73,73,56,53,68,101,99,111,100,101,32,47,70,108,97,116,101,68,101,99,111,100,101,32,93,32,47,76,101,110,103,116,104,32,49,57,49,49,10,62,62,10,115,116,114,101,97,109,10,71,97,116,109,60,57,54,56,105,71,38,65,73,61,47,109,37,112,56,75,64,106,65,111,106,54,117,84,77,77,51,85,83,108,52,41,84,107,89,43,97,98,63,36,111,77,91,96,42,39,44,105,117,117,69,94,39,100,45,36,96,35,115,63,104,102,79,74,69,55,94,52,35,34,89,33,95,87,107,65,114,103,90,109,97,95,96,92,78,50,62,67,99,59,107,93,85,95,87,101,37,36,104,68,104,34,86,73,117,79,74,93,109,46,42,62,33,102,58,41,88,54,108,114,35,96,100,105,64,93,78,55,66,38,56,100,96,42,81,63,97,112,93,43,50,91,100,97,44,67,62,45,72,114,102,86,67,36,95,75,100,80,115,106,35,38,77,49,54,95,46,52,99,91,81,77,55,55,73,58,88,108,36,113,98,63,87,100,59,62,99,40,115,57,69,94,95,103,109,61,90,90,59,48,110,100,33,49,102,43,84,109,70,104,81,85,45,113,111,39,85,92,36,76,49,45,93,103,106,33,95,73,79,77,68,36,45,90,44,86,37,99,73,81,89,40,41,82,86,69,42,94,48,33,110,41,99,107,80,90,75,89,51,92,48,86,104,114,98,55,75,87,57,38,33,81,73,103,51,81,42,66,92,97,110,112,59,99,103,74,101,37,85,35,108,115,42,57,42,49,90,59,107,76,57,38,114,78,45,99,110,103,107,39,108,89,35,49,84,98,97,102,37,91,47,99,88,88,103,86,56,109,91,44,61,68,61,52,117,63,91,40,53,101,98,38,49,39,105,87,80,98,106,72,38,102,106,65,92,93,115,42,47,108,82,93,109,80,48,85,73,60,44,77,34,49,67,51,67,97,77,106,113,74,66,114,40,109,93,103,62,61,88,46,81,89,96,59,61,33,111,98,115,102,56,91,74,107,108,108,112,58,42,99,70,87,115,88,61,116,45,79,68,62,96,87,117,46,70,69,79,104,105,67,36,114,73,99,47,52,54,83,37,56,66,110,77,88,41,52,98,111,86,72,114,73,71,70,97,54,54,79,113,98,73,91,78,91,77,62,82,105,53,103,114,74,70,77,68,88,55,60,33,49,104,81,82,35,56,86,79,60,92,90,102,48,89,60,109,116,79,100,94,103,39,95,65,107,72,92,104,111,47,36,79,111,86,77,56,114,61,89,59,88,34,69,83,113,75,64,85,93,84,38,78,83,38,59,73,80,106,100,43,82,39,86,62,62,46,80,72,72,58,88,116,58,84,67,94,43,86,98,92,89,90,90,83,115,102,71,51,73,33,68,69,93,106,37,34,41,72,58,101,110,103,64,99,67,41,42,42,95,51,56,90,64,63,50,112,58,81,87,107,75,109,49,36,55,39,54,81,44,91,91,76,78,92,94,54,93,62,39,116,75,82,82,103,56,83,86,65,115,48,93,49,91,63,51,41,41,38,69,67,69,79,74,55,45,46,72,45,45,112,56,95,88,115,104,45,113,93,49,48,59,106,110,100,84,116,113,88,90,115,83,114,90,33,94,79,85,37,60,72,77,104,40,91,35,74,116,51,78,75,91,97,95,38,89,83,117,73,89,106,75,41,56,87,59,101,35,77,39,51,64,98,111,69,95,33,113,72,102,85,66,106,108,112,92,58,56,63,102,60,51,79,61,39,60,48,100,64,90,114,107,70,45,107,106,80,94,83,96,55,55,104,109,81,113,56,81,58,99,50,115,76,73,104,112,63,95,85,108,110,43,112,94,87,104,49,104,82,73,117,35,47,92,66,107,110,77,71,94,47,83,69,46,88,93,35,112,71,60,110,41,54,39,53,89,51,82,35,84,37,75,112,69,89,90,78,57,54,41,65,42,50,96,37,113,54,51,104,66,115,114,33,102,71,84,80,60,60,63,38,109,48,91,87,33,45,35,39,74,37,96,60,48,117,96,83,73,74,103,115,53,76,100,107,42,69,63,74,98,107,64,43,50,74,67,89,40,64,113,52,86,44,39,42,38,115,89,74,58,36,61,89,49,59,37,35,59,114,78,46,82,93,106,103,98,97,75,41,67,81,80,90,77,85,59,71,81,67,75,53,77,40,67,89,87,52,68,64,102,43,67,91,71,38,76,54,83,56,89,38,65,45,91,77,85,88,96,65,90,110,54,53,60,55,53,50,114,112,53,67,106,71,109,49,74,72,108,58,73,62,66,90,97,91,72,42,101,44,107,108,106,89,46,62,87,47,85,59,49,40,80,98,53,89,88,65,61,52,90,42,96,51,71,59,46,48,114,81,62,86,107,71,95,109,40,104,36,67,96,44,116,100,78,67,35,40,54,58,99,104,45,79,50,38,62,36,65,99,102,58,111,79,75,95,74,61,78,49,79,68,117,72,36,76,112,109,36,35,100,90,47,113,109,35,56,33,83,61,96,113,105,101,91,77,73,79,59,76,108,69,53,109,110,59,48,44,33,85,43,106,79,106,68,63,34,53,91,73,35,50,47,45,92,91,56,35,38,36,102,66,114,81,75,53,91,49,72,110,46,68,107,108,68,52,74,72,87,47,102,117,47,40,97,93,85,102,72,42,100,100,61,56,56,74,81,104,109,103,73,104,86,34,40,112,57,58,82,33,115,71,100,35,93,96,98,74,109,59,73,102,97,107,106,41,53,85,34,45,59,61,49,41,91,103,36,61,53,70,86,58,76,71,68,105,71,94,49,109,103,44,60,60,95,61,54,47,117,93,99,93,114,64,78,101,34,65,101,102,96,67,88,82,85,70,94,92,91,72,74,108,75,101,54,95,44,45,60,65,39,64,59,114,70,62,92,69,88,33,104,104,59,94,34,67,91,109,107,37,38,89,51,85,108,102,52,34,36,88,52,55,33,85,100,112,80,88,37,94,68,98,104,76,83,72,98,106,58,85,45,112,41,75,67,42,58,69,96,77,116,78,55,50,90,44,104,60,101,62,116,59,83,61,58,67,83,58,81,99,78,111,111,113,95,39,103,86,80,81,35,75,60,101,48,102,91,98,71,52,50,64,73,115,80,105,89,94,36,59,95,109,62,110,84,86,67,51,63,87,113,99,102,59,111,42,111,39,89,61,38,66,36,87,69,93,41,38,54,51,43,76,56,105,72,108,114,43,57,87,35,70,109,49,61,91,44,117,41,80,61,94,45,90,93,62,107,103,79,48,106,33,72,40,43,94,75,96,90,51,58,103,104,62,57,61,98,62,93,56,37,75,74,82,45,65,59,41,56,88,59,57,72,116,113,61,77,72,70,53,47,70,85,73,114,36,93,60,93,78,56,105,86,48,82,34,35,66,95,99,57,46,68,53,64,112,108,66,50,91,92,37,79,97,58,114,112,47,76,95,82,45,76,88,50,54,98,57,37,46,33,115,104,50,78,65,104,66,43,73,50,52,46,105,62,94,104,47,86,56,75,56,76,42,74,43,111,112,68,65,71,91,38,102,108,43,86,91,85,81,48,110,36,75,92,92,70,50,83,92,103,53,74,112,78,68,91,72,94,104,115,66,88,43,113,57,65,61,80,87,115,49,53,46,93,117,44,37,88,83,56,64,59,38,43,83,85,96,66,73,65,74,36,60,90,87,52,44,73,34,39,41,73,35,100,83,111,53,106,44,63,36,73,107,49,48,71,43,90,39,84,54,45,106,111,78,91,91,48,88,94,42,87,88,82,90,66,46,105,73,51,108,62,38,34,49,97,77,81,42,42,51,65,99,55,50,110,55,105,37,99,107,63,65,106,76,70,76,57,78,38,71,112,109,51,102,114,43,113,58,115,38,43,101,70,96,81,36,84,101,87,74,88,42,106,111,49,116,47,73,83,63,105,108,110,114,68,101,52,81,42,86,94,71,66,93,63,58,116,34,42,112,64,80,53,75,73,87,89,66,45,80,62,113,50,103,71,41,67,44,71,71,64,86,93,80,48,63,53,50,79,113,95,57,61,84,63,54,38,113,86,76,99,116,57,95,80,86,116,91,103,92,116,77,94,67,85,74,67,81,43,91,41,57,66,78,75,36,82,52,95,39,87,97,62,63,44,85,36,58,82,101,60,56,102,78,84,80,37,54,67,98,113,71,73,40,34,41,84,105,53,55,76,51,110,52,96,33,87,88,62,88,77,92,40,114,60,51,77,46,45,48,96,62,74,107,83,82,70,70,76,97,92,57,112,113,38,60,57,104,55,99,47,63,79,38,54,103,44,84,109,97,92,111,60,81,54,68,74,41,84,94,115,90,101,64,40,56,64,73,61,57,113,108,103,33,78,59,114,71,107,69,46,56,57,68,81,49,126,62,101,110,100,115,116,114,101,97,109,10,101,110,100,111,98,106,10,120,114,101,102,10,48,32,49,50,10,48,48,48,48,48,48,48,48,48,48,32,54,53,53,51,53,32,102,32,10,48,48,48,48,48,48,48,48,55,51,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,49,52,52,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,50,53,49,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,51,54,51,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,52,55,51,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,53,56,49,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,54,57,48,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,56,56,53,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,48,57,53,52,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,49,50,53,48,32,48,48,48,48,48,32,110,32,10,48,48,48,48,48,48,49,51,49,48,32,48,48,48,48,48,32,110,32,10,116,114,97,105,108,101,114,10,60,60,10,47,73,68,32,10,91,60,56,49,55,57,53,51,48,56,100,49,101,101,100,51,48,54,53,101,52,98,49,56,57,102,55,51,55,52,102,102,99,99,62,60,56,49,55,57,53,51,48,56,100,49,101,101,100,51,48,54,53,101,52,98,49,56,57,102,55,51,55,52,102,102,99,99,62,93,10,37,32,82,101,112,111,114,116,76,97,98,32,103,101,110,101,114,97,116,101,100,32,80,68,70,32,100,111,99,117,109,101,110,116,32,45,45,32,100,105,103,101,115,116,32,40,104,116,116,112,58,47,47,119,119,119,46,114,101,112,111,114,116,108,97,98,46,99,111,109,41,10,10,47,73,110,102,111,32,57,32,48,32,82,10,47,82,111,111,116,32,56,32,48,32,82,10,47,83,105,122,101,32,49,50,10,62,62,10,115,116,97,114,116,120,114,101,102,10,51,51,49,51,10,37,37,69,79,70,10];
    List<int> imgbytes =await file!.readAsBytes();
    print(imgbytes);
    FileUpload fileupload=FileUpload(
        moduleType: "infrastructure",
        sectionType: sectionType,
        contentType: contentType,
        filename:file!.path.toString().split('/').last,
        file: imgbytes,
        fileText1: fileText1,
        fileText2: fileText2);
    String url=BASE_URL+UPLOAD_FILES;
    SharedPreferences preferences=await SharedPreferences.getInstance();
    String? transactionId=preferences.getString(TSNID);
    String? param11=preferences.getString(PARAM11);
    RequestFileUpload requestFileUpload=RequestFileUpload(
        transactionId: transactionId,
        param15: widget.darpanId,
        param11: int.parse(param11.toString()),
        param13: "BASE",
        source: source,
        fileUpload: fileupload
    );

    print(requestFileUpload);
    Util util = new Util();
    bool isOnline = await util.hasInternet();

    if (isOnline) {
      return presenterSubmitFormWithFiles.uploadFile(url, context,requestFileUpload.toMap(),sectionType,fileText1,fileText2);
    }
    else {

      Fluttertoast.showToast(
          msg: "No Internet!",
          toastLength: Toast.LENGTH_SHORT,
          gravity: ToastGravity.BOTTOM,
          timeInSecForIosWeb: 1,
          textColor: Colors.white,
          backgroundColor: Colors.black,
          fontSize: 16.0);
      return false;
    }

  }
  Future<dynamic>? loader() {
    return showDialog(
      context: context,
      barrierDismissible: false,
      builder: (context) => const Center(
        child: SizedBox(
          height: 50,
          width: 50,
          child: CircularProgressIndicator(
            valueColor: AlwaysStoppedAnimation<Color>(Colors.orange),
            strokeWidth: 5.0,
          ),
        ),
      ),
    );
  }
  @override
  bool onErrorUploadFile(String errorTxt) {
    // TODO: implement onErrorUploadFile
    Navigator.of(context).pop();
    Fluttertoast.showToast(
        msg: errorTxt,
        toastLength: Toast.LENGTH_SHORT,
        gravity: ToastGravity.BOTTOM,
        timeInSecForIosWeb: 1,
        textColor: Colors.white,
        backgroundColor: Colors.black,
        fontSize: 16.0);
    return false;
  }

  @override
  bool onResponseUploadFile(ResponseFileUpload responseDto, String section, String text1, String text2) {
    // TODO: implement onResponseUploadFile
    // TODO: implement onResponseUploadFile
    Navigator.of(context).pop();
    Fluttertoast.showToast(
        msg: responseDto.statusDesc.toString(),
        toastLength: Toast.LENGTH_SHORT,
        gravity: ToastGravity.BOTTOM,
        timeInSecForIosWeb: 1,
        textColor: Colors.white,
        backgroundColor: Colors.black,
        fontSize: 16.0);
      UploadedFiles uploadedFiles=UploadedFiles(
        fileUpldId: responseDto.recordId.toString(),
        fileText2: text2,
        fileText1: text1,
        moduleType: "infrastructure",
        sectionType: section
      );
      uploadedFile.add(uploadedFiles);
    return true;
  }


}
